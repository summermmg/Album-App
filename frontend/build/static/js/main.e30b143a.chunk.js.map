{"version":3,"sources":["components/Header.js","screens/HomeScreen.js","constants.js","actions.js","components/Message.js","components/ProgressBar.js","screens/FileUploadScreen.js","components/ImageItem.js","components/Loader.js","screens/MyAlbumScreen.js","screens/SampleAlbumScreen.js","App.js","store.js","reducers.js","index.js"],"names":["Header","Navbar","collapseOnSelect","expand","bg","variant","className","to","Brand","Toggle","aria-controls","Collapse","id","Nav","Link","HomeScreen","Carousel","Item","interval","src","alt","Caption","style","color","GET_SAMPLES_REQUEST","GET_SAMPLES_SUCCESS","GET_SAMPLES_FAIL","UPLOAD_REQUEST","UPLOAD_LOADING_PERCENTAGE","UPLOAD_SUCCESS","UPLOAD_FAIL","GET_UPLOADS_REQUEST","GET_UPLOADS_SUCCESS","GET_UPLOADS_FAIL","DELETE_IMAGE_REQUEST","DELETE_IMAGE_FAIL","DELETE_IMAGE_SUCCESS","fileUpload","formData","dispatch","a","type","axios","post","headers","onUploadProgress","progressEvent","payload","parseInt","Math","round","loaded","total","data","response","status","msg","Message","children","useState","show","setShow","Alert","onClose","dismissible","ProgressBar","loadedPercentage","role","aria-valuenow","aria-valuemin","aria-valuemax","width","FileUploadScreen","uploadedInfo","useSelector","state","upload","uploadedFile","loading","error","file","setFile","filename","setFilename","textarea","setTextarea","useDispatch","onSubmit","e","preventDefault","FormData","append","onChange","target","files","name","disabled","htmlFor","for","value","rows","fileName","filePath","ImageItem","el","imageArray","excerpt","index","indexOf","img","isViewerOpen","setIsViewerOpen","Dropdown","Menu","onClick","console","log","delete","paylaod","uploads","description","Card","Img","currentIndex","backgroundStyle","backgroundColor","Loader","Col","Spinner","animation","height","MyAlbumScreen","uploadsInfo","message","deleteImage","useEffect","get","content","map","push","sm","md","lg","xl","length","Row","SampleAlbumScreen","samplesInfo","samples","data-toggle","data-target","App","exact","path","component","rootReducer","combineReducers","action","composedEnhancer","composeWithDevTools","applyMiddleware","thunk","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e30b143a.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Navbar,Nav} from 'react-bootstrap'\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\n\r\nconst Header = () => {\r\n\r\n    return (\r\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"primary\" variant=\"dark\" className=\"px-4\">\r\n\r\n        <LinkContainer className=\"mr-5\" to=\"/\">\r\n          <Navbar.Brand><i className=\"fas fa-camera\"></i> Album</Navbar.Brand>\r\n        </LinkContainer>\r\n\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              <LinkContainer to=\"/\" className=\"mr-5\">\r\n                <Nav.Link>Home</Nav.Link>\r\n              </LinkContainer>\r\n\r\n              <LinkContainer to=\"/samples\" className=\"mr-5\">\r\n                <Nav.Link><i className=\"fas fa-paw\"></i> Samples</Nav.Link>\r\n              </LinkContainer>    \r\n\r\n              <LinkContainer to=\"/myalbum\" className=\"mr-5\">\r\n                <Nav.Link><i className=\"fas fa-heart\"></i> My Album</Nav.Link>\r\n              </LinkContainer>   \r\n\r\n              <LinkContainer to=\"/fileupload\">\r\n                <Nav.Link><i className=\"fas fa-plus\"></i> Add New Image</Nav.Link>\r\n              </LinkContainer>  \r\n            </Nav>\r\n          </Navbar.Collapse>\r\n      </Navbar>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport {Carousel} from 'react-bootstrap'\r\n\r\nconst HomeScreen = () => {\r\n    return (\r\n        <div className=\"jumbotron px-5\">\r\n            <Carousel className=\"mx-5\"> \r\n                <Carousel.Item interval={4000}>\r\n                    <img\r\n                    className=\"d-block w-100\"\r\n                    src=\"/images/home1.jpg\"\r\n                    alt=\"First slide\"\r\n                    />\r\n                    <Carousel.Caption>\r\n                        <h5 style={{color: \"white\"}}>Santa Barbara, CA, USA</h5>\r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n                <Carousel.Item interval={5000}>\r\n                    <img\r\n                    className=\"d-block w-100\"\r\n                    src=\"/images/home2.jpg\"\r\n                    alt=\"Third slide\"\r\n                    />\r\n                    <Carousel.Caption>\r\n                        <h5 style={{color: \"white\"}}>Santa Barbara, CA, USA</h5>\r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n                <Carousel.Item interval={5000}>\r\n                    <img\r\n                    className=\"d-block w-100\"\r\n                    src=\"/images/home3.jpg\"\r\n                    alt=\"Third slide\"\r\n                    />\r\n                    <Carousel.Caption>\r\n                        <h5 style={{color: \"white\"}}>Los Angeles, CA, USA</h5>\r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n            </Carousel>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n\r\n\r\n\r\n\r\n","export const GET_SAMPLES_REQUEST = 'GET_SAMPLES_REQUEST'\r\nexport const GET_SAMPLES_SUCCESS = 'GET_SAMPLES_SUCCESS'\r\nexport const GET_SAMPLES_FAIL = 'GET_SAMPLES_FAIL'\r\n\r\nexport const UPLOAD_REQUEST = 'UPLOAD_REQUEST'\r\nexport const UPLOAD_LOADING_PERCENTAGE = 'UPLOAD_LOADING_PERCENTAGE'\r\nexport const UPLOAD_SUCCESS = 'UPLOAD_SUCCESS'\r\nexport const UPLOAD_FAIL = 'UPLOAD_FAIL'\r\n\r\nexport const GET_UPLOADS_REQUEST = 'GET_UPLOADS_REQUEST'\r\nexport const GET_UPLOADS_SUCCESS = 'GET_UPLOADS_SUCCESS'\r\nexport const GET_UPLOADS_FAIL = 'GET_UPLOADS_FAIL'\r\n\r\nexport const DELETE_IMAGE_REQUEST = 'DELETE_IMAGE_REQUEST' \r\nexport const DELETE_IMAGE_FAIL = 'DELETE_IMAGE_FAIL' \r\nexport const DELETE_IMAGE_SUCCESS = 'DELETE_IMAGE_SUCCESS' \r\n\r\n","import axios from 'axios'\r\n\r\nimport {\r\n    GET_SAMPLES_REQUEST,\r\n    GET_SAMPLES_SUCCESS,\r\n    GET_SAMPLES_FAIL,\r\n\r\n    UPLOAD_REQUEST,\r\n    UPLOAD_LOADING_PERCENTAGE,\r\n    UPLOAD_SUCCESS,\r\n    UPLOAD_FAIL,\r\n\r\n    GET_UPLOADS_REQUEST,\r\n    GET_UPLOADS_SUCCESS,\r\n    GET_UPLOADS_FAIL,\r\n\r\n    DELETE_IMAGE_REQUEST,\r\n    DELETE_IMAGE_FAIL,\r\n    DELETE_IMAGE_SUCCESS\r\n\r\n} from './constants'\r\n\r\nexport const fetchSamples = () => async (dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: GET_SAMPLES_REQUEST,\r\n        })\r\n        const {data} = await axios.get('/api/samples')\r\n        dispatch({\r\n            type: GET_SAMPLES_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_SAMPLES_FAIL,\r\n            payload: error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const fileUpload = (formData) => async (dispatch) => {\r\n\r\n    try{\r\n        dispatch({\r\n            type: UPLOAD_REQUEST,\r\n        })\r\n\r\n        const {data} = await axios.post('/upload', formData, {\r\n            headers: {\r\n              'Content-Type': 'multipart/form-data'\r\n            },\r\n            onUploadProgress: progressEvent => {\r\n                dispatch({\r\n                    type: UPLOAD_LOADING_PERCENTAGE,\r\n                    payload: parseInt(\r\n                        Math.round((progressEvent.loaded * 100) / progressEvent.total)\r\n                    )\r\n                })\r\n            }\r\n        })\r\n\r\n        dispatch({\r\n            type: UPLOAD_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch(error) {\r\n        if (error.response.status === 500) {\r\n            dispatch({\r\n                type:UPLOAD_FAIL,\r\n                payload: 'There was a problem with the server'\r\n            })\r\n        } else {\r\n            dispatch({\r\n                type:UPLOAD_FAIL,\r\n                payload: error.response.data.msg\r\n            })\r\n          }\r\n    }\r\n}\r\n\r\nexport const fetchUploads = () => async (dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: GET_UPLOADS_REQUEST,\r\n        })\r\n        const {data} = await axios.get('/api/uploads')\r\n        dispatch({\r\n            type: GET_UPLOADS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch(error) {\r\n        dispatch({\r\n            type:GET_UPLOADS_FAIL,\r\n            payload: error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteImage = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: DELETE_IMAGE_REQUEST\r\n        })\r\n        console.log(id)\r\n        const {data} = await axios.delete(`/api/uploads/${id}`)\r\n        dispatch({\r\n            type: DELETE_IMAGE_SUCCESS,\r\n            paylaod: data.uploads\r\n        })\r\n    } catch(error) {\r\n        dispatch({\r\n            type:DELETE_IMAGE_FAIL,\r\n            payload: error.response.data.msg\r\n        })\r\n    }\r\n}","import React,{useState} from 'react'\r\nimport {Alert} from 'react-bootstrap'\r\n\r\nconst Message = ({children,variant}) => {\r\n    const [show, setShow] = useState(true)\r\n\r\n    if (show) {\r\n        return (\r\n          <Alert variant={variant} onClose={() => setShow(false)} dismissible>\r\n            {children}\r\n          </Alert>\r\n        );\r\n    }\r\n    return null\r\n}\r\n\r\n\r\nexport default Message","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProgressBar = ({loadedPercentage}) => {\r\n    return (\r\n        <div className=\"progress\">\r\n            <div \r\n                className=\"progress-bar progress-bar-striped progress-bar-animated\" \r\n                role=\"progressbar\" \r\n                aria-valuenow=\"75\" \r\n                aria-valuemin=\"0\" \r\n                aria-valuemax=\"100\" \r\n                style={{ width: `${loadedPercentage}%` }}\r\n            >\r\n            {loadedPercentage}%\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nProgressBar.propTypes = {\r\n    loadedPercentage: PropTypes.number.isRequired\r\n}\r\n\r\nexport default ProgressBar","import React, {Fragment, useState} from 'react'\r\nimport {useSelector,useDispatch} from 'react-redux'\r\nimport {fileUpload} from '../actions'\r\nimport Message from '../components/Message'\r\nimport ProgressBar from '../components/ProgressBar'\r\n\r\nconst FileUploadScreen = () => {\r\n\r\n    const uploadedInfo = useSelector(state => state.upload)\r\n    const {uploadedFile,loading, loadedPercentage, error} = uploadedInfo\r\n\r\n    const [file, setFile] = useState(null)\r\n    const [filename, setFilename] = useState('Choose File');\r\n    const [textarea, setTextarea] = useState('')\r\n    \r\n    const dispatch = useDispatch()\r\n\r\n    const onChange = e => {\r\n        setFile(e.target.files[0]);\r\n        setFilename(e.target.files[0].name);\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (file === null) {\r\n            dispatch(fileUpload(new FormData()))\r\n        }\r\n\r\n        const formData = new FormData()\r\n        //the 'file' is correspond to server req.files.file so we can get the formData format in server\r\n        if (textarea !== '') {\r\n            formData.append('description',textarea)\r\n        }\r\n        formData.append('file', file)\r\n\r\n        dispatch(fileUpload(formData))\r\n\r\n        setTextarea('')\r\n        setFilename('Choose File')\r\n        setFile(null)\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"jumbotron text-center mx-auto mt-5\" style={{width: \"40%\"}}>\r\n                <form onSubmit={onSubmit} className=\"mb-3\">\r\n                    <div className=\"form-group\">\r\n                                           \r\n                        <div className='custom-file mb-4' >                            \r\n                            <input\r\n                                type='file'\r\n                                className='custom-file-input'\r\n                                id='customFile'\r\n                                onChange={onChange}\r\n                                disabled\r\n                            />\r\n                            <label className='custom-file-label' htmlFor='customFile'>\r\n                                {filename}\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label for=\"exampleTextarea\">Image Description</label>\r\n                        <textarea value={textarea} onChange={(e) => {setTextarea(e.target.value)}} className=\"form-control\" id=\"image-textarea\" rows=\"3\"></textarea>\r\n                    </div>\r\n                    <Message variant=\"info\">{\"Add Image button is disabled for live demo.\"}</Message> \r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            type='submit'\r\n                            value='Upload'\r\n                            className='btn btn-primary mt-4'\r\n                            disabled\r\n                        />\r\n                    </div>\r\n                </form>\r\n\r\n                {loadedPercentage ? <ProgressBar loadedPercentage = {loadedPercentage} /> : null} \r\n                \r\n                {error ? <Message variant=\"warning\">{error}</Message> : null}\r\n\r\n                {/* {loading && loadedPercentage ? <h1>{loadedPercentage}</h1> : null} */}\r\n\r\n                {uploadedFile ? (\r\n                    <div className='row mt-5'>\r\n                        <div className='col-md-6 m-auto'>\r\n                            <Message variant=\"success\">Image uploaded</Message>\r\n                            <h3 className='text-center'>{uploadedFile.fileName}</h3>\r\n                            <img style={{ width: '100%' }} src={uploadedFile.filePath} alt='' />\r\n                        </div>\r\n                    </div>\r\n                ) : null}\r\n            </div>\r\n        </Fragment>\r\n    )\r\n   \r\n}\r\n\r\nexport default FileUploadScreen\r\n","import React, {useState} from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport {Card,Dropdown} from 'react-bootstrap'\r\nimport ImageViewer from 'react-simple-image-viewer'\r\nimport {deleteImage} from '../actions'\r\n\r\nconst ImageItem = ({el,imageArray, excerpt}) => {\r\n    const index = imageArray.indexOf(el.img)\r\n\r\n    const dispatch = useDispatch()\r\n    const [isViewerOpen, setIsViewerOpen] = useState(false);\r\n\r\n    const openImageViewer = () => {\r\n        setIsViewerOpen(true);\r\n    }\r\n\r\n    const closeImageViewer = () => {\r\n        setIsViewerOpen(false);\r\n    };\r\n\r\n    const onClickHandler = () => {\r\n        dispatch(deleteImage(el.id))\r\n    }\r\n\r\n    return (\r\n        <div className=\"card border-secondary mb-4\" >\r\n            {excerpt && (\r\n                <Dropdown className=\"d-flex justify-content-end\">\r\n                    <Dropdown.Toggle variant=\"light\" id=\"dropdown-basic\">\r\n                        <i className=\"fas fa-bars\"></i>\r\n                    </Dropdown.Toggle>\r\n\r\n                    <Dropdown.Menu>\r\n                        <Dropdown.Item onClick={onClickHandler}>Delete</Dropdown.Item>                   \r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n            )}\r\n\r\n            <div className=\"card-body\">                   \r\n                <h5>\r\n                    {el.description}\r\n                </h5>\r\n            </div>               \r\n            <Card.Img onClick={ openImageViewer } variant=\"bottom\" src={el.img} className=\"img-fluid\" />\r\n\r\n            {isViewerOpen && (\r\n            <ImageViewer\r\n                src={ imageArray }\r\n                currentIndex={ index }\r\n                onClose={ closeImageViewer }\r\n                backgroundStyle={{\r\n                    backgroundColor: \"rgba(0,0,0,0.9)\"\r\n                }}\r\n            />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageItem\r\n","import React from 'react'\r\nimport {Col, Spinner} from 'react-bootstrap'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <Col className=\"loader text-center\">\r\n            <Spinner animation=\"border\" role=\"status\" style={{height:\"100px\",width:\"100px\"}}>\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </Spinner>\r\n        </Col> \r\n    )\r\n}\r\n\r\nexport default Loader","import React, {useEffect} from 'react'\r\nimport {useSelector,useDispatch} from 'react-redux'\r\nimport ImageItem from '../components/ImageItem'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport {fetchUploads} from '../actions'\r\nimport { Row, Col } from 'react-bootstrap'\r\n\r\nconst MyAlbumScreen = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const uploadsInfo = useSelector(state => state.uploads)\r\n    const {uploads,loading,error} = uploadsInfo\r\n\r\n    const imageDeleted = useSelector(state => state.deleteImage)\r\n    const {message} = imageDeleted\r\n\r\n    useEffect(() => {\r\n            dispatch(fetchUploads())\r\n        }\r\n    , [dispatch,message])\r\n\r\n    const imageArray = []\r\n    uploads.map(el => imageArray.push(el.img))\r\n\r\n    let content\r\n    if (loading) {\r\n        content=<Loader />\r\n    } else if (error) {\r\n        content=<Message variant=\"danger\">{error}</Message>\r\n    } else {\r\n        content = uploads.map(el => \r\n            (        \r\n                <Col key={el.id} sm={12} md={6} lg={4} xl={3}>    \r\n                <ImageItem el={el} imageArray={imageArray} excerpt />\r\n                </Col>\r\n            ) \r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"section\">\r\n            <div className=\"container\">\r\n                <h2 className=\"my-5\">My Album</h2>\r\n                {uploads.length===0 && (\r\n                    <Message variant=\"info\">There is no image in this album. <Link to=\"/fileupload\">Upload one.</Link></Message>\r\n                )}\r\n                <Row className=\"align-items-center\">\r\n                    {content}\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyAlbumScreen","import React, {useEffect} from 'react'\r\nimport {useSelector,useDispatch} from 'react-redux'\r\nimport ImageItem from '../components/ImageItem'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\n\r\nimport {fetchSamples} from '../actions'\r\nimport { Row, Col } from 'react-bootstrap'\r\n\r\nconst SampleAlbumScreen = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const samplesInfo = useSelector(state => state.samples)\r\n    const {samples,loading,error} = samplesInfo\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchSamples())\r\n    }, [dispatch])\r\n\r\n    //create an imagePath array for ImageViewer\r\n    const imageArray = []\r\n    samples.map(el => imageArray.push(el.img))\r\n\r\n    let content\r\n    if (loading) {\r\n        content=<Loader />\r\n    } else if (error) {\r\n        content=<Message variant=\"danger\">{error}</Message>\r\n    } else {   \r\n        content = samples.map(el => (\r\n            <Col key={el.id} sm={12} md={6} lg={4} xl={3}>    \r\n                <ImageItem el={el} imageArray={imageArray} />\r\n            </Col>\r\n        ))                  \r\n    }   \r\n\r\n\r\n    return (\r\n        <div className=\"section\">\r\n            <div className=\"container\">\r\n                <h2 className=\"my-5\">Sample Album</h2>\r\n                <Row className=\"align-items-center\" data-toggle=\"modal\" data-target=\"#exampleModal\">\r\n                    {content}\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SampleAlbumScreen\r\n","import React from 'react'\r\nimport Header from './components/Header'\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\r\nimport HomeScreen from './screens/HomeScreen'\r\nimport FileUploadScreen from './screens/FileUploadScreen'\r\nimport MyAlbumScreen from './screens/MyAlbumScreen'\r\nimport SampleAlbumScreen from './screens/SampleAlbumScreen'\r\nimport './App.css'\r\n\r\n\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <Header/>\r\n\r\n      <main>\r\n        <Route exact path=\"/\" component={HomeScreen} />\r\n        <Route path=\"/samples\" component={SampleAlbumScreen} />\r\n        <Route path=\"/myalbum\" component={MyAlbumScreen} />\r\n        <Route path=\"/fileupload\" component={FileUploadScreen} />\r\n      </main>\r\n    </Router>  \r\n  )\r\n}\r\nexport default App;\r\n","import {createStore,applyMiddleware,combineReducers} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport {deleteImageReducer, samplesReducer,uploadReducer,uploadsReducer} from './reducers'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nconst rootReducer = combineReducers({\r\n    samples: samplesReducer,\r\n    upload: uploadReducer,\r\n    uploads: uploadsReducer,\r\n    deleteImage: deleteImageReducer,\r\n})\r\nconst initialState = {\r\n\r\n}\r\n\r\nconst composedEnhancer = composeWithDevTools(applyMiddleware(thunk))\r\n\r\nconst store = createStore(rootReducer, initialState,composedEnhancer)\r\n\r\nexport default store","import {\r\n    GET_SAMPLES_REQUEST,\r\n    GET_SAMPLES_SUCCESS,\r\n    GET_SAMPLES_FAIL,\r\n\r\n    UPLOAD_REQUEST,\r\n    UPLOAD_LOADING_PERCENTAGE,\r\n    UPLOAD_SUCCESS,\r\n    UPLOAD_FAIL,\r\n\r\n    GET_UPLOADS_REQUEST,\r\n    GET_UPLOADS_SUCCESS,\r\n    GET_UPLOADS_FAIL,\r\n\r\n    DELETE_IMAGE_REQUEST,\r\n    DELETE_IMAGE_FAIL,\r\n    DELETE_IMAGE_SUCCESS\r\n} from './constants'\r\n\r\nexport const samplesReducer = (state={samples:[]}, action) => {\r\n    switch (action.type) {\r\n        case GET_SAMPLES_REQUEST:\r\n            return {\r\n                loading: true,\r\n                samples: [],\r\n            }\r\n        case GET_SAMPLES_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                samples: action.payload,\r\n            }\r\n        case GET_SAMPLES_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        default:\r\n            return state     \r\n    }\r\n}\r\n\r\nexport const uploadReducer = (state = { uploadedFile: '' }, action) => {\r\n    switch (action.type) {\r\n        case UPLOAD_REQUEST:\r\n            return {\r\n                loading: true,\r\n                uploadedFile: '',\r\n                loadedPercentage: 0,\r\n            }\r\n\r\n        case UPLOAD_LOADING_PERCENTAGE:\r\n            return {\r\n                loading: true,\r\n                uploadedFile: '',\r\n                loadedPercentage: action.payload,\r\n            }    \r\n        \r\n        case UPLOAD_SUCCESS:\r\n            const { fileName, filePath } = action.payload\r\n            return {\r\n                loading: false,\r\n                uploadedFile: { fileName, filePath },\r\n                loadedPercentage: 100,\r\n            }\r\n        case UPLOAD_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        default:\r\n            return state     \r\n    }\r\n}\r\n\r\nexport const uploadsReducer = (state={uploads:[]}, action) => {\r\n    switch (action.type) {\r\n        case GET_UPLOADS_REQUEST:\r\n            return {\r\n                loading: true,\r\n                uploads: [],\r\n            }\r\n        case GET_UPLOADS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                uploads: action.payload,\r\n            }\r\n        case GET_UPLOADS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        default:\r\n            return state     \r\n    }\r\n}\r\n\r\nexport const deleteImageReducer = (state={message:''},action) => {\r\n    switch (action.type) {\r\n        case DELETE_IMAGE_REQUEST:\r\n            return {\r\n                loading: true,\r\n                message: '',\r\n            }\r\n        case DELETE_IMAGE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                message: 'Image deleted!',\r\n            }\r\n        case DELETE_IMAGE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }      \r\n        default:\r\n            return state      \r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './bootstrap.min.css'\r\nimport App from './App';\r\n\r\nimport store from './store'\r\nimport {Provider} from 'react-redux'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n"],"sourceRoot":""}